#!/usr/bin/env node

var program = require('commander');
var config  = require('../config');

if ( !config.token && process.argv.indexOf('--token') === -1 && process.argv.indexOf('--help') === -1 ){
  console.log('Must export your github personal access token as `NGH_ACCESS_TOKEN` or use the --token flag');
  process.exit(1);
}

program.version('0.1.0');

program.option('--token', 'Specifies your github personal access token');

program
  .command('create [name]')
  .description('creates a new repository')
  .option('-d, --description <description>', 'Repository description')
  .option('-h, --homepage <homepage>', 'Repository homepage')
  .option('-p, --private', 'Denotes that the repo is private')
  .action( require('./commands/create-repo') );

program
  .command('remove [org/name]')
  .description('removes a new repository')
  .action( require('./commands/remove-repo') );

program
  .command('open')
  .description('opens an issue')
  .option('-o, --organization <organization>', 'Repository owner/organization')
  .option('-r, --repo <repo_name>', 'Repository name')
  .option('-t, --title <title>', 'Issue title')
  .option('-m, --title <title>', 'Issue title')
  .option('-b, --body <body>', 'Issue body')
  .option('-a, --assignee <assignee>', 'Login for the user that this issue should be assigned to')
  .option('-i, --milestone <milestone>', 'Milestone ID to associate this issue with')
  .option('-l, --labels <labels>', 'Comma separated label list', function( v ){ return v.split(','); })
  .action( require('./commands/open-issue') );

program
  .command('close <issue_number>')
  .description('closes an issue')
  .option('-o, --organization <organization>', 'Repository owner/organization')
  .option('-r, --repo <repo_name>', 'Repository name')
  .action( require('./commands/close-issue') );

program
  .command('issues [org/name]')
  .description('lists issues for org/name or current repo')
  .option('-o, --organization <organization>', 'Repository owner/organization')
  .option('-r, --repo <repo_name>', 'Repository name')
  .action( require('./commands/list-issues') );

program.parse( process.argv );